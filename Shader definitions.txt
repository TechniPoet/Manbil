Vertices:

	Vector3f Position;
	Vector4f Color;
	Vector2f TexCoords;
	Vector3f Normal;



Vertex shader:

	in_pos: world position of vertex (vec3).
	in_col: color of vertex (vec4).
	in_tex: texture coords of vertex (vec2).
	in_normal: normal coords of vertex (vec3).

	u_wvp: the world-view-projection matrix (mat4).
	u_world: the world matrix (mat4).
	u_view: the view matrix (mat4).
	u_proj: the projection matrix (mat4).
	u_cam_pos: the camera's position (vec3).
	u_elapsed_seconds: the amount of total elapsed time, in seconds.
	u_sampler0 - u_sampler4: 2D texture samplers.

	out_pos: output for vertex position (vec3, should be in world space).
	out_col: output for vertex color (vec4).
	out_tex: output for vertex texture coordinate (vec2).
	out_normal: output for vertex normal (vec3).
	gl_Position: mandatory output for vertex position (vec4, should be in 4d clip coordinates).

	vec4 worldTo4DScreen(vec3): converts a position from world space to 4d clip coordinates (the correct output for the vertex's position).
	vec3 fourDScreenTo3DScreen(vec4): converts a position from 4d clip coordinates to normalized device coordinates ({-1, -1, -1} to {1, 1, 1}).
	vec3 worldTo3DScreen(vec3): converts a position from world space to normalized device coordinates ({-1, -1, -1} to {1, 1, 1}).



Pixel shader:
	
	out_pos: input for fragment position (vec3).
	out_col: input for fragment color (vec4).
	out_tex: input for fragment texture coordinate (vec2).
	out_normal: input for fragment normal (vec3).

	u_wvp: the world-view-projection matrix (mat4).
	u_world: the world matrix (mat4).
	u_view: the view matrix (mat4).
	u_cam_pos: the camera's position (vec3).
	u_proj: the projection matrix (mat4).
	u_elapsed_seconds: the amount of total elapsed time, in seconds.
	u_sampler0 - u_sampler4: 2D texture samplers.

	out_finalCol: mandatory output for pixel color (vec4).

	vec4 worldTo4DScreen(vec3): converts a position from world space to 4d clip coordinates (the correct output for the vertex's position).
	vec3 fourDScreenTo3DScreen(vec4): converts a position from 4d clip coordinates to normalized device coordinates ({-1, -1, -1} to {1, 1, 1}).
	vec3 worldTo3DScreen(vec3): converts a position from world space to normalized device coordinates ({-1, -1, -1} to {1, 1, 1}).
	float getBrightness(vec3 surfaceNormal, vec3 camToFragmentNormal, vec3 lightDirNormal, float ambient, float diffuse, float specular, float specularIntensity): Gets the light value of a surface given some light and surface data. A value of 0 corresponds to "completely dark", and a value of 1 corresponds to "fully lit".